// <auto-generated />
using System;
using InterCityWebAPI.Data.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace InterCityWebAPI.Migrations
{
    [DbContext(typeof(InterCityDbContext))]
    [Migration("20210316091354_SqlDb")]
    partial class SqlDb
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.1");

            modelBuilder.Entity("InterCityWebAPI.Data.Models.BookingModel", b =>
                {
                    b.Property<Guid>("ReferenceNumber")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("EmailAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FareType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NoOfPassengers")
                        .HasColumnType("int");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RouteId")
                        .HasColumnType("int");

                    b.Property<float>("TotalCost")
                        .HasColumnType("real");

                    b.HasKey("ReferenceNumber");

                    b.HasIndex("RouteId");

                    b.ToTable("Bookings");
                });

            modelBuilder.Entity("InterCityWebAPI.Data.Models.CityModel", b =>
                {
                    b.Property<string>("CityName")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("BusStop")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CityName");

                    b.ToTable("Cities");
                });

            modelBuilder.Entity("InterCityWebAPI.Data.Models.RouteModel", b =>
                {
                    b.Property<int>("RouteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("ArrivalTime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DepartureDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DepartureTime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("FlexiPrice")
                        .HasColumnType("real");

                    b.Property<string>("FromCityName")
                        .HasColumnType("nvarchar(450)");

                    b.Property<float>("StandardPrice")
                        .HasColumnType("real");

                    b.Property<string>("ToCityName")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("RouteId");

                    b.HasIndex("FromCityName");

                    b.HasIndex("ToCityName");

                    b.ToTable("Routes");
                });

            modelBuilder.Entity("InterCityWebAPI.Data.Models.BookingModel", b =>
                {
                    b.HasOne("InterCityWebAPI.Data.Models.RouteModel", "Route")
                        .WithMany("Bookings")
                        .HasForeignKey("RouteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Route");
                });

            modelBuilder.Entity("InterCityWebAPI.Data.Models.RouteModel", b =>
                {
                    b.HasOne("InterCityWebAPI.Data.Models.CityModel", "FromCity")
                        .WithMany("FromRoutes")
                        .HasForeignKey("FromCityName")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("InterCityWebAPI.Data.Models.CityModel", "ToCity")
                        .WithMany("ToRoutes")
                        .HasForeignKey("ToCityName")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("FromCity");

                    b.Navigation("ToCity");
                });

            modelBuilder.Entity("InterCityWebAPI.Data.Models.CityModel", b =>
                {
                    b.Navigation("FromRoutes");

                    b.Navigation("ToRoutes");
                });

            modelBuilder.Entity("InterCityWebAPI.Data.Models.RouteModel", b =>
                {
                    b.Navigation("Bookings");
                });
#pragma warning restore 612, 618
        }
    }
}
