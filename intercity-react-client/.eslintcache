[{"C:\\Users\\hashim khanzada\\source\\repos\\InterCityClone\\intercity-react-client\\src\\index.js":"1","C:\\Users\\hashim khanzada\\source\\repos\\InterCityClone\\intercity-react-client\\src\\App.js":"2","C:\\Users\\hashim khanzada\\source\\repos\\InterCityClone\\intercity-react-client\\src\\api\\axios.js":"3","C:\\Users\\hashim khanzada\\source\\repos\\InterCityClone\\intercity-react-client\\src\\components\\index.js":"4","C:\\Users\\hashim khanzada\\source\\repos\\InterCityClone\\intercity-react-client\\src\\components\\Navbar\\Navbar.js":"5","C:\\Users\\hashim khanzada\\source\\repos\\InterCityClone\\intercity-react-client\\src\\components\\Receipt\\Receipt.tsx":"6","C:\\Users\\hashim khanzada\\source\\repos\\InterCityClone\\intercity-react-client\\src\\components\\Route\\RouteRow.tsx":"7","C:\\Users\\hashim khanzada\\source\\repos\\InterCityClone\\intercity-react-client\\src\\components\\Manage\\ManageBooking.tsx":"8","C:\\Users\\hashim khanzada\\source\\repos\\InterCityClone\\intercity-react-client\\src\\components\\Route\\BookingOption\\BookingOption.tsx":"9","C:\\Users\\hashim khanzada\\source\\repos\\InterCityClone\\intercity-react-client\\src\\components\\BookingSummary\\BookingSummary.tsx":"10","C:\\Users\\hashim khanzada\\source\\repos\\InterCityClone\\intercity-react-client\\src\\components\\ContactForm\\ContactDetails.tsx":"11","C:\\Users\\hashim khanzada\\source\\repos\\InterCityClone\\intercity-react-client\\src\\pages\\HomePage\\Home.tsx":"12","C:\\Users\\hashim khanzada\\source\\repos\\InterCityClone\\intercity-react-client\\src\\pages\\ManagePage\\Manage.tsx":"13","C:\\Users\\hashim khanzada\\source\\repos\\InterCityClone\\intercity-react-client\\src\\controls\\FormInput.tsx":"14","C:\\Users\\hashim khanzada\\source\\repos\\InterCityClone\\intercity-react-client\\src\\controls\\DateInput.tsx":"15","C:\\Users\\hashim khanzada\\source\\repos\\InterCityClone\\intercity-react-client\\src\\controls\\NumberInput.tsx":"16","C:\\Users\\hashim khanzada\\source\\repos\\InterCityClone\\intercity-react-client\\src\\controls\\AutoCompleteInput.tsx":"17"},{"size":197,"mtime":1615869205030,"results":"18","hashOfConfig":"19"},{"size":550,"mtime":1615875531603,"results":"20","hashOfConfig":"19"},{"size":1169,"mtime":1615872514887,"results":"21","hashOfConfig":"19"},{"size":470,"mtime":1615881282125,"results":"22","hashOfConfig":"19"},{"size":1111,"mtime":1615874839056,"results":"23","hashOfConfig":"19"},{"size":1090,"mtime":1615874856558,"results":"24","hashOfConfig":"19"},{"size":5935,"mtime":1615875222656,"results":"25","hashOfConfig":"19"},{"size":5550,"mtime":1615875788747,"results":"26","hashOfConfig":"19"},{"size":1132,"mtime":1615875809776,"results":"27","hashOfConfig":"19"},{"size":3313,"mtime":1615878481653,"results":"28","hashOfConfig":"19"},{"size":2413,"mtime":1615878472826,"results":"29","hashOfConfig":"19"},{"size":9159,"mtime":1615880503276,"results":"30","hashOfConfig":"19"},{"size":5489,"mtime":1615878446637,"results":"31","hashOfConfig":"19"},{"size":759,"mtime":1615880409893,"results":"32","hashOfConfig":"19"},{"size":930,"mtime":1615880409894,"results":"33","hashOfConfig":"19"},{"size":742,"mtime":1615880969532,"results":"34","hashOfConfig":"19"},{"size":978,"mtime":1615880844497,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"15jnxb4",{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"49"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},"C:\\Users\\hashim khanzada\\source\\repos\\InterCityClone\\intercity-react-client\\src\\index.js",[],["74","75"],"C:\\Users\\hashim khanzada\\source\\repos\\InterCityClone\\intercity-react-client\\src\\App.js",[],"C:\\Users\\hashim khanzada\\source\\repos\\InterCityClone\\intercity-react-client\\src\\api\\axios.js",[],"C:\\Users\\hashim khanzada\\source\\repos\\InterCityClone\\intercity-react-client\\src\\components\\index.js",[],"C:\\Users\\hashim khanzada\\source\\repos\\InterCityClone\\intercity-react-client\\src\\components\\Navbar\\Navbar.js",[],"C:\\Users\\hashim khanzada\\source\\repos\\InterCityClone\\intercity-react-client\\src\\components\\Receipt\\Receipt.tsx",[],["76","77"],"C:\\Users\\hashim khanzada\\source\\repos\\InterCityClone\\intercity-react-client\\src\\components\\Route\\RouteRow.tsx",[],"C:\\Users\\hashim khanzada\\source\\repos\\InterCityClone\\intercity-react-client\\src\\components\\Manage\\ManageBooking.tsx",[],"C:\\Users\\hashim khanzada\\source\\repos\\InterCityClone\\intercity-react-client\\src\\components\\Route\\BookingOption\\BookingOption.tsx",[],"C:\\Users\\hashim khanzada\\source\\repos\\InterCityClone\\intercity-react-client\\src\\components\\BookingSummary\\BookingSummary.tsx",[],["78","79"],"C:\\Users\\hashim khanzada\\source\\repos\\InterCityClone\\intercity-react-client\\src\\components\\ContactForm\\ContactDetails.tsx",[],"C:\\Users\\hashim khanzada\\source\\repos\\InterCityClone\\intercity-react-client\\src\\pages\\HomePage\\Home.tsx",["80"],"import React, { useState } from \"react\";\r\nimport \"./Home.css\";\r\nimport AutoCompleteInput from \"../../controls/AutoCompleteInput\";\r\nimport DateInput from \"../../controls/DateInput\";\r\nimport NumberInput from \"../../controls/NumberInput\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport { createAPIEndpoint, ENDPOINTS } from \"../../api/axios\";\r\nimport { RouteRow } from \"../../components\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport \"date-fns\";\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\nimport { MuiPickersUtilsProvider } from \"@material-ui/pickers\";\r\nimport moment from \"moment\";\r\nimport { ContactDetails } from \"../../components\";\r\nimport { BookingSummary } from \"../../components\";\r\nimport { Receipt } from \"../../components\";\r\n\r\ninterface RouteInfo {\r\n  routeId: number;\r\n  departureTime: string;\r\n  arrivalTime: string;\r\n  standardPrice: number;\r\n  flexiPrice: number;\r\n  fromCity: { busStop: string };\r\n  toCity: { busStop: string };\r\n  departureDate: string;\r\n}\r\n\r\nconst HeroSection = () => {\r\n  const [fromCity, setFromCity] = useState(\"Wanganui\");\r\n  const [toCity, setToCity] = useState(\"Palmerston North\");\r\n  const [selectedDate, setSelectedDate] = useState<Date | null>(new Date());\r\n  const [noOfPassengers, setnoOfPassengers] = useState(1);\r\n  const [firstName, setFirstName] = useState(\"\");\r\n  const [lastName, setLastName] = useState(\"\");\r\n  const [emailAddress, setEmailAddress] = useState(\"\");\r\n  const [phoneNumber, setPhoneNumber] = useState(\"\");\r\n  const [fareType, setFareType] = useState(\"\");\r\n  const [totalCost, setTotalCost] = useState(0);\r\n  const [routeId, setRouteId] = useState(0);\r\n  const [contactDetailsPage, setContactDetailsPage] = useState(false);\r\n  const [bookingSummaryPage, setBookingSummaryPage] = useState(false);\r\n  const [departureDate, setDepartureDate] = useState(\"\");\r\n  const [departureTime, setDepartureTime] = useState(\"\");\r\n  const [arrivalTime, setArrivalTime] = useState(\"\");\r\n  const [referenceNumber, setReferenceNumber] = useState(\"\");\r\n\r\n  const [routes, setRoutes] = useState<any>([]);\r\n\r\n  const searchPage = async () => {\r\n    const convertedDate = moment(selectedDate).format(\"ddd, D MMM YYYY\");\r\n\r\n    await createAPIEndpoint(ENDPOINTS.ROUTE)\r\n      .createRoute(fromCity, toCity, convertedDate)\r\n      .then(async () => {\r\n        await createAPIEndpoint(ENDPOINTS.ROUTELIST)\r\n          .fetchByCityAndDate(fromCity, toCity, convertedDate)\r\n          .then((response: any) => {\r\n            setRoutes(response.data);\r\n          });\r\n      });\r\n  };\r\n\r\n  const submitUserDetails = async () => {\r\n    await createAPIEndpoint(ENDPOINTS.BOOKINGS)\r\n      .createBooking(\r\n        firstName,\r\n        lastName,\r\n        emailAddress,\r\n        phoneNumber,\r\n        noOfPassengers,\r\n        fareType,\r\n        totalCost,\r\n        routeId\r\n      )\r\n      .then((response: any) => {\r\n        setReferenceNumber(response.data.referenceNumber);\r\n        setBookingSummaryPage(false);\r\n      });\r\n  };\r\n\r\n  const incrementPassengers = () => {\r\n    setnoOfPassengers(noOfPassengers + 1);\r\n  };\r\n\r\n  const decrementPassengers = () => {\r\n    if (noOfPassengers > 1) {\r\n      setnoOfPassengers(noOfPassengers - 1);\r\n    }\r\n  };\r\n\r\n  const editSearch = () => {\r\n    setRoutes([]);\r\n  };\r\n\r\n  const addBooking = (\r\n    price: number,\r\n    id: number,\r\n    seatType: string,\r\n    departDate: string,\r\n    arriveTime: string,\r\n    departTime: string\r\n  ) => {\r\n    setFareType(seatType);\r\n    setTotalCost(price);\r\n    setRouteId(id);\r\n    setContactDetailsPage(true);\r\n    setDepartureDate(departDate);\r\n    setDepartureTime(arriveTime);\r\n    setArrivalTime(departTime);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"hero\">\r\n        <div\r\n          className={`hero__bookingContainer ${\r\n            (routes.length > 0 && \"hideForm\") ||\r\n            (contactDetailsPage && \"hideForm\") ||\r\n            (bookingSummaryPage && \"hideForm\") ||\r\n            (referenceNumber.length > 0 && \"hideForm\")\r\n          }`}\r\n        >\r\n          <div className=\"hero__bookingForm\">\r\n            <h2>Where would you like to go?</h2>\r\n\r\n            <div className=\"row1\">\r\n              <AutoCompleteInput\r\n                changeText={(e) => {\r\n                  console.log(e.target.value);\r\n                  setFromCity(e.target.value);\r\n                }}\r\n                placeholderText=\"From\"\r\n              />\r\n\r\n              <AutoCompleteInput\r\n                placeholderText=\"To\"\r\n                changeText={(e) => setToCity(e.target.value)}\r\n              />\r\n            </div>\r\n            <div className=\"row2\">\r\n              <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                <DateInput\r\n                  dateValue={selectedDate}\r\n                  changeDate={setSelectedDate}\r\n                />\r\n              </MuiPickersUtilsProvider>\r\n              <NumberInput\r\n                value={noOfPassengers}\r\n                increment={incrementPassengers}\r\n                decrement={decrementPassengers}\r\n              />\r\n            </div>\r\n            <div className=\"hero__button\">\r\n              {toCity && fromCity ? (\r\n                <Button variant=\"outlined\" onClick={searchPage}>\r\n                  Search\r\n                </Button>\r\n              ) : (\r\n                <Button variant=\"outlined\" disabled>\r\n                  Search\r\n                </Button>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div\r\n          className={`hero__results ${\r\n            routes.length > 0 &&\r\n            !contactDetailsPage &&\r\n            !bookingSummaryPage &&\r\n            referenceNumber.length === 0 &&\r\n            \"hero__results__appear\"\r\n          }`}\r\n        >\r\n          <div className=\"hero__editSearchContainer\">\r\n            <p></p>\r\n            <h2>\r\n              {fromCity} to {toCity}\r\n            </h2>\r\n\r\n            <div className=\"hero__editSearchButton\">\r\n              <Button variant=\"outlined\" onClick={editSearch}>\r\n                <EditIcon />\r\n                Edit Search\r\n              </Button>\r\n            </div>\r\n          </div>\r\n          <div className=\"hero__routeResults\">\r\n            {routes?.map((route: RouteInfo) => (\r\n              <>\r\n                <RouteRow\r\n                  key={route.routeId}\r\n                  departureTime={route.departureTime}\r\n                  arrivalTime={route.arrivalTime}\r\n                  standardPrice={route.standardPrice}\r\n                  fromCity={fromCity}\r\n                  toCity={toCity}\r\n                  routeId={route.routeId}\r\n                  standardSeatPrice={route.standardPrice}\r\n                  flexiSeatPrice={route.flexiPrice}\r\n                  fromCityBusStop={route.fromCity.busStop}\r\n                  toCityBusStop={route.toCity.busStop}\r\n                  numberOfAdults={noOfPassengers}\r\n                  bookStandard={() =>\r\n                    addBooking(\r\n                      route.standardPrice * noOfPassengers,\r\n                      route.routeId,\r\n                      \"standard\",\r\n                      route.departureDate,\r\n                      route.arrivalTime,\r\n                      route.departureTime\r\n                    )\r\n                  }\r\n                  bookFlexi={() =>\r\n                    addBooking(\r\n                      route.flexiPrice * noOfPassengers,\r\n                      route.routeId,\r\n                      \"flexi\",\r\n                      route.departureDate,\r\n                      route.arrivalTime,\r\n                      route.departureTime\r\n                    )\r\n                  }\r\n                />\r\n              </>\r\n            ))}\r\n          </div>\r\n        </div>\r\n        {contactDetailsPage && (\r\n          <ContactDetails\r\n            firstName={firstName}\r\n            firstNameChange={(e) => setFirstName(e.target.value)}\r\n            lastName={lastName}\r\n            lastNameChange={(e) => setLastName(e.target.value)}\r\n            email={emailAddress}\r\n            emailChange={(e) => setEmailAddress(e.target.value)}\r\n            phoneNumber={phoneNumber}\r\n            phoneNumberChange={(e) => setPhoneNumber(e.target.value)}\r\n            goBack={() => {\r\n              setContactDetailsPage(false);\r\n            }}\r\n            goForward={() => {\r\n              setBookingSummaryPage(true);\r\n              setContactDetailsPage(false);\r\n            }}\r\n          />\r\n        )}\r\n        {bookingSummaryPage && (\r\n          <BookingSummary\r\n            fromCity={fromCity}\r\n            toCity={toCity}\r\n            routeId={routeId}\r\n            departureDate={departureDate}\r\n            departureTime={departureTime}\r\n            arrivalTime={arrivalTime}\r\n            fareType={fareType}\r\n            noOfPassengers={noOfPassengers}\r\n            totalCost={totalCost}\r\n            pay={() => {\r\n              submitUserDetails();\r\n            }}\r\n          />\r\n        )}\r\n        {referenceNumber && (\r\n          <Receipt\r\n            firstName={firstName}\r\n            lastName={lastName}\r\n            referenceNumber={referenceNumber}\r\n          />\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HeroSection;\r\n","C:\\Users\\hashim khanzada\\source\\repos\\InterCityClone\\intercity-react-client\\src\\pages\\ManagePage\\Manage.tsx",[],"C:\\Users\\hashim khanzada\\source\\repos\\InterCityClone\\intercity-react-client\\src\\controls\\FormInput.tsx",[],"C:\\Users\\hashim khanzada\\source\\repos\\InterCityClone\\intercity-react-client\\src\\controls\\DateInput.tsx",[],"C:\\Users\\hashim khanzada\\source\\repos\\InterCityClone\\intercity-react-client\\src\\controls\\NumberInput.tsx",[],"C:\\Users\\hashim khanzada\\source\\repos\\InterCityClone\\intercity-react-client\\src\\controls\\AutoCompleteInput.tsx",[],{"ruleId":"81","replacedBy":"82"},{"ruleId":"83","replacedBy":"84"},{"ruleId":"81","replacedBy":"82"},{"ruleId":"83","replacedBy":"84"},{"ruleId":"81","replacedBy":"85"},{"ruleId":"83","replacedBy":"86"},{"ruleId":"87","severity":1,"message":"88","line":92,"column":9,"nodeType":"89","messageId":"90","endLine":92,"endColumn":22},"no-native-reassign",["91"],"no-negated-in-lhs",["92"],["91"],["92"],"@typescript-eslint/no-unused-vars","'swapCityNames' is assigned a value but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]